name: Koyeb登录保活

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  login:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    - name: Run login script
      env:
        TG_BOT_TOKEN: xxx
        TG_CHAT_ID: xxx
      run: |
        python - <<EOF
        import os
        import requests
        import json
        # 直接在代码中定义账户信息
        KOYEB_ACCOUNTS = [
            {"email": "xxx", "password": "xxx"},
            # 可以根据需要添加更多账户
        ]
        def send_tg_message(message):
            bot_token = os.environ['TG_BOT_TOKEN']
            chat_id = os.environ['TG_CHAT_ID']
            url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
            data = {
                "chat_id": chat_id,
                "text": message,
                "parse_mode": "Markdown"
            }
            response = requests.post(url, data=data)
            return response.json()
        def login_koyeb(email, password):
            login_url = "https://app.koyeb.com/v1/account/login"
            headers = {
                "Content-Type": "application/json",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            }
            data = {
                "email": email,
                "password": password
            }
            
            try:
                response = requests.post(login_url, headers=headers, json=data)
                response.raise_for_status()  # 如果请求失败，这将引发异常
                
                if response.status_code == 200:
                    return True, "登录成功"
                else:
                    return False, f"登录失败: HTTP状态码 {response.status_code}"
            except requests.RequestException as e:
                return False, f"登录失败: {str(e)}"
        # 登录结果
        results = []
        for account in KOYEB_ACCOUNTS:
            email = account['email']
            password = account['password']
            success, message = login_koyeb(email, password)
            results.append(f"账户: {email}\n状态: {'成功' if success else '失败'}\n消息: {message}\n")
        # 构建 Telegram 消息
        tg_message = "Koyeb 登录报告\n\n"
        tg_message += "\n".join(results)
        # 发送 Telegram 消息
        send_tg_message(tg_message)
        EOF
